// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "stdafx.h"
#include "objects.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace eveobjects {

namespace {

const ::google::protobuf::Descriptor* BooleanObject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BooleanObject_reflection_ = NULL;
const ::google::protobuf::Descriptor* functionCall_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  functionCall_reflection_ = NULL;
const ::google::protobuf::Descriptor* Interface_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Interface_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_objects_2eproto() {
  protobuf_AddDesc_objects_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "objects.proto");
  GOOGLE_CHECK(file != NULL);
  BooleanObject_descriptor_ = file->message_type(0);
  static const int BooleanObject_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BooleanObject, istrue_),
  };
  BooleanObject_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BooleanObject_descriptor_,
      BooleanObject::default_instance_,
      BooleanObject_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BooleanObject, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BooleanObject, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BooleanObject));
  functionCall_descriptor_ = file->message_type(1);
  static const int functionCall_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(functionCall, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(functionCall, strparameter_),
  };
  functionCall_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      functionCall_descriptor_,
      functionCall::default_instance_,
      functionCall_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(functionCall, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(functionCall, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(functionCall));
  Interface_descriptor_ = file->message_type(2);
  static const int Interface_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Interface, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Interface, topleftx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Interface, toplefty_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Interface, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Interface, height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Interface, hasclosebutton_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Interface, closetopleftx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Interface, closetoplefty_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Interface, hascontinuebutton_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Interface, continuetopleftx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Interface, continuetoplefty_),
  };
  Interface_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Interface_descriptor_,
      Interface::default_instance_,
      Interface_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Interface, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Interface, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Interface));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_objects_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BooleanObject_descriptor_, &BooleanObject::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    functionCall_descriptor_, &functionCall::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Interface_descriptor_, &Interface::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_objects_2eproto() {
  delete BooleanObject::default_instance_;
  delete BooleanObject_reflection_;
  delete functionCall::default_instance_;
  delete functionCall_reflection_;
  delete Interface::default_instance_;
  delete Interface_reflection_;
}

void protobuf_AddDesc_objects_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\robjects.proto\022\neveobjects\"\037\n\rBooleanOb"
    "ject\022\016\n\006istrue\030\001 \002(\010\"2\n\014functionCall\022\014\n\004"
    "name\030\001 \002(\t\022\024\n\014strparameter\030\002 \001(\t\"\361\001\n\tInt"
    "erface\022\014\n\004name\030\001 \002(\t\022\020\n\010topleftX\030\002 \002(\005\022\020"
    "\n\010topleftY\030\003 \002(\005\022\r\n\005width\030\004 \002(\005\022\016\n\006heigh"
    "t\030\005 \002(\005\022\026\n\016hasCloseButton\030\006 \001(\010\022\025\n\rclose"
    "TopLeftX\030\007 \001(\005\022\025\n\rcloseTopLeftY\030\010 \001(\005\022\031\n"
    "\021hasContinueButton\030\t \001(\010\022\030\n\020continueTopL"
    "eftX\030\n \001(\005\022\030\n\020continueTopLeftY\030\013 \001(\005", 356);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "objects.proto", &protobuf_RegisterTypes);
  BooleanObject::default_instance_ = new BooleanObject();
  functionCall::default_instance_ = new functionCall();
  Interface::default_instance_ = new Interface();
  BooleanObject::default_instance_->InitAsDefaultInstance();
  functionCall::default_instance_->InitAsDefaultInstance();
  Interface::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_objects_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_objects_2eproto {
  StaticDescriptorInitializer_objects_2eproto() {
    protobuf_AddDesc_objects_2eproto();
  }
} static_descriptor_initializer_objects_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int BooleanObject::kIstrueFieldNumber;
#endif  // !_MSC_VER

BooleanObject::BooleanObject()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BooleanObject::InitAsDefaultInstance() {
}

BooleanObject::BooleanObject(const BooleanObject& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BooleanObject::SharedCtor() {
  _cached_size_ = 0;
  istrue_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BooleanObject::~BooleanObject() {
  SharedDtor();
}

void BooleanObject::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BooleanObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BooleanObject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BooleanObject_descriptor_;
}

const BooleanObject& BooleanObject::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_objects_2eproto();  return *default_instance_;
}

BooleanObject* BooleanObject::default_instance_ = NULL;

BooleanObject* BooleanObject::New() const {
  return new BooleanObject;
}

void BooleanObject::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    istrue_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BooleanObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool istrue = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &istrue_)));
          set_has_istrue();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BooleanObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bool istrue = 1;
  if (has_istrue()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->istrue(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BooleanObject::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool istrue = 1;
  if (has_istrue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->istrue(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BooleanObject::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool istrue = 1;
    if (has_istrue()) {
      total_size += 1 + 1;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BooleanObject::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BooleanObject* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BooleanObject*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BooleanObject::MergeFrom(const BooleanObject& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_istrue()) {
      set_istrue(from.istrue());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BooleanObject::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BooleanObject::CopyFrom(const BooleanObject& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BooleanObject::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void BooleanObject::Swap(BooleanObject* other) {
  if (other != this) {
    std::swap(istrue_, other->istrue_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BooleanObject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BooleanObject_descriptor_;
  metadata.reflection = BooleanObject_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int functionCall::kNameFieldNumber;
const int functionCall::kStrparameterFieldNumber;
#endif  // !_MSC_VER

functionCall::functionCall()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void functionCall::InitAsDefaultInstance() {
}

functionCall::functionCall(const functionCall& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void functionCall::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strparameter_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

functionCall::~functionCall() {
  SharedDtor();
}

void functionCall::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (strparameter_ != &::google::protobuf::internal::kEmptyString) {
    delete strparameter_;
  }
  if (this != default_instance_) {
  }
}

void functionCall::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* functionCall::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return functionCall_descriptor_;
}

const functionCall& functionCall::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_objects_2eproto();  return *default_instance_;
}

functionCall* functionCall::default_instance_ = NULL;

functionCall* functionCall::New() const {
  return new functionCall;
}

void functionCall::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_strparameter()) {
      if (strparameter_ != &::google::protobuf::internal::kEmptyString) {
        strparameter_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool functionCall::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_strparameter;
        break;
      }
      
      // optional string strparameter = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strparameter:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strparameter()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strparameter().data(), this->strparameter().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void functionCall::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }
  
  // optional string strparameter = 2;
  if (has_strparameter()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strparameter().data(), this->strparameter().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strparameter(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* functionCall::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }
  
  // optional string strparameter = 2;
  if (has_strparameter()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strparameter().data(), this->strparameter().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strparameter(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int functionCall::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
    // optional string strparameter = 2;
    if (has_strparameter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strparameter());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void functionCall::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const functionCall* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const functionCall*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void functionCall::MergeFrom(const functionCall& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_strparameter()) {
      set_strparameter(from.strparameter());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void functionCall::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void functionCall::CopyFrom(const functionCall& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool functionCall::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void functionCall::Swap(functionCall* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(strparameter_, other->strparameter_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata functionCall::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = functionCall_descriptor_;
  metadata.reflection = functionCall_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Interface::kNameFieldNumber;
const int Interface::kTopleftXFieldNumber;
const int Interface::kTopleftYFieldNumber;
const int Interface::kWidthFieldNumber;
const int Interface::kHeightFieldNumber;
const int Interface::kHasCloseButtonFieldNumber;
const int Interface::kCloseTopLeftXFieldNumber;
const int Interface::kCloseTopLeftYFieldNumber;
const int Interface::kHasContinueButtonFieldNumber;
const int Interface::kContinueTopLeftXFieldNumber;
const int Interface::kContinueTopLeftYFieldNumber;
#endif  // !_MSC_VER

Interface::Interface()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Interface::InitAsDefaultInstance() {
}

Interface::Interface(const Interface& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Interface::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  topleftx_ = 0;
  toplefty_ = 0;
  width_ = 0;
  height_ = 0;
  hasclosebutton_ = false;
  closetopleftx_ = 0;
  closetoplefty_ = 0;
  hascontinuebutton_ = false;
  continuetopleftx_ = 0;
  continuetoplefty_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Interface::~Interface() {
  SharedDtor();
}

void Interface::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void Interface::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Interface::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Interface_descriptor_;
}

const Interface& Interface::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_objects_2eproto();  return *default_instance_;
}

Interface* Interface::default_instance_ = NULL;

Interface* Interface::New() const {
  return new Interface;
}

void Interface::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    topleftx_ = 0;
    toplefty_ = 0;
    width_ = 0;
    height_ = 0;
    hasclosebutton_ = false;
    closetopleftx_ = 0;
    closetoplefty_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    hascontinuebutton_ = false;
    continuetopleftx_ = 0;
    continuetoplefty_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Interface::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_topleftX;
        break;
      }
      
      // required int32 topleftX = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_topleftX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &topleftx_)));
          set_has_topleftx();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_topleftY;
        break;
      }
      
      // required int32 topleftY = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_topleftY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &toplefty_)));
          set_has_toplefty();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_width;
        break;
      }
      
      // required int32 width = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_width:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
          set_has_width();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_height;
        break;
      }
      
      // required int32 height = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
          set_has_height();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_hasCloseButton;
        break;
      }
      
      // optional bool hasCloseButton = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hasCloseButton:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hasclosebutton_)));
          set_has_hasclosebutton();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_closeTopLeftX;
        break;
      }
      
      // optional int32 closeTopLeftX = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_closeTopLeftX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &closetopleftx_)));
          set_has_closetopleftx();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_closeTopLeftY;
        break;
      }
      
      // optional int32 closeTopLeftY = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_closeTopLeftY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &closetoplefty_)));
          set_has_closetoplefty();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_hasContinueButton;
        break;
      }
      
      // optional bool hasContinueButton = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hasContinueButton:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hascontinuebutton_)));
          set_has_hascontinuebutton();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_continueTopLeftX;
        break;
      }
      
      // optional int32 continueTopLeftX = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_continueTopLeftX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &continuetopleftx_)));
          set_has_continuetopleftx();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_continueTopLeftY;
        break;
      }
      
      // optional int32 continueTopLeftY = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_continueTopLeftY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &continuetoplefty_)));
          set_has_continuetoplefty();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Interface::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }
  
  // required int32 topleftX = 2;
  if (has_topleftx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->topleftx(), output);
  }
  
  // required int32 topleftY = 3;
  if (has_toplefty()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->toplefty(), output);
  }
  
  // required int32 width = 4;
  if (has_width()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->width(), output);
  }
  
  // required int32 height = 5;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->height(), output);
  }
  
  // optional bool hasCloseButton = 6;
  if (has_hasclosebutton()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->hasclosebutton(), output);
  }
  
  // optional int32 closeTopLeftX = 7;
  if (has_closetopleftx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->closetopleftx(), output);
  }
  
  // optional int32 closeTopLeftY = 8;
  if (has_closetoplefty()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->closetoplefty(), output);
  }
  
  // optional bool hasContinueButton = 9;
  if (has_hascontinuebutton()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->hascontinuebutton(), output);
  }
  
  // optional int32 continueTopLeftX = 10;
  if (has_continuetopleftx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->continuetopleftx(), output);
  }
  
  // optional int32 continueTopLeftY = 11;
  if (has_continuetoplefty()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->continuetoplefty(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Interface::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }
  
  // required int32 topleftX = 2;
  if (has_topleftx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->topleftx(), target);
  }
  
  // required int32 topleftY = 3;
  if (has_toplefty()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->toplefty(), target);
  }
  
  // required int32 width = 4;
  if (has_width()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->width(), target);
  }
  
  // required int32 height = 5;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->height(), target);
  }
  
  // optional bool hasCloseButton = 6;
  if (has_hasclosebutton()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->hasclosebutton(), target);
  }
  
  // optional int32 closeTopLeftX = 7;
  if (has_closetopleftx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->closetopleftx(), target);
  }
  
  // optional int32 closeTopLeftY = 8;
  if (has_closetoplefty()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->closetoplefty(), target);
  }
  
  // optional bool hasContinueButton = 9;
  if (has_hascontinuebutton()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->hascontinuebutton(), target);
  }
  
  // optional int32 continueTopLeftX = 10;
  if (has_continuetopleftx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->continuetopleftx(), target);
  }
  
  // optional int32 continueTopLeftY = 11;
  if (has_continuetoplefty()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->continuetoplefty(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Interface::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
    // required int32 topleftX = 2;
    if (has_topleftx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->topleftx());
    }
    
    // required int32 topleftY = 3;
    if (has_toplefty()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->toplefty());
    }
    
    // required int32 width = 4;
    if (has_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->width());
    }
    
    // required int32 height = 5;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->height());
    }
    
    // optional bool hasCloseButton = 6;
    if (has_hasclosebutton()) {
      total_size += 1 + 1;
    }
    
    // optional int32 closeTopLeftX = 7;
    if (has_closetopleftx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->closetopleftx());
    }
    
    // optional int32 closeTopLeftY = 8;
    if (has_closetoplefty()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->closetoplefty());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional bool hasContinueButton = 9;
    if (has_hascontinuebutton()) {
      total_size += 1 + 1;
    }
    
    // optional int32 continueTopLeftX = 10;
    if (has_continuetopleftx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->continuetopleftx());
    }
    
    // optional int32 continueTopLeftY = 11;
    if (has_continuetoplefty()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->continuetoplefty());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Interface::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Interface* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Interface*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Interface::MergeFrom(const Interface& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_topleftx()) {
      set_topleftx(from.topleftx());
    }
    if (from.has_toplefty()) {
      set_toplefty(from.toplefty());
    }
    if (from.has_width()) {
      set_width(from.width());
    }
    if (from.has_height()) {
      set_height(from.height());
    }
    if (from.has_hasclosebutton()) {
      set_hasclosebutton(from.hasclosebutton());
    }
    if (from.has_closetopleftx()) {
      set_closetopleftx(from.closetopleftx());
    }
    if (from.has_closetoplefty()) {
      set_closetoplefty(from.closetoplefty());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_hascontinuebutton()) {
      set_hascontinuebutton(from.hascontinuebutton());
    }
    if (from.has_continuetopleftx()) {
      set_continuetopleftx(from.continuetopleftx());
    }
    if (from.has_continuetoplefty()) {
      set_continuetoplefty(from.continuetoplefty());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Interface::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Interface::CopyFrom(const Interface& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Interface::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  
  return true;
}

void Interface::Swap(Interface* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(topleftx_, other->topleftx_);
    std::swap(toplefty_, other->toplefty_);
    std::swap(width_, other->width_);
    std::swap(height_, other->height_);
    std::swap(hasclosebutton_, other->hasclosebutton_);
    std::swap(closetopleftx_, other->closetopleftx_);
    std::swap(closetoplefty_, other->closetoplefty_);
    std::swap(hascontinuebutton_, other->hascontinuebutton_);
    std::swap(continuetopleftx_, other->continuetopleftx_);
    std::swap(continuetoplefty_, other->continuetoplefty_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Interface::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Interface_descriptor_;
  metadata.reflection = Interface_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace eveobjects

// @@protoc_insertion_point(global_scope)
