// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: objects.proto

#ifndef PROTOBUF_objects_2eproto__INCLUDED
#define PROTOBUF_objects_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace eveobjects {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_objects_2eproto();
void protobuf_AssignDesc_objects_2eproto();
void protobuf_ShutdownFile_objects_2eproto();

class infoObject;
class BooleanObject;
class functionCall;
class overview;
class itemgroup;
class item;
class label;
class TargetList;
class targetentry;
class jammers;
class Interface;

// ===================================================================

class infoObject : public ::google::protobuf::Message {
 public:
  infoObject();
  virtual ~infoObject();
  
  infoObject(const infoObject& from);
  
  inline infoObject& operator=(const infoObject& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const infoObject& default_instance();
  
  void Swap(infoObject* other);
  
  // implements Message ----------------------------------------------
  
  infoObject* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const infoObject& from);
  void MergeFrom(const infoObject& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string text = 1;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 1;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  
  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:eveobjects.infoObject)
 private:
  inline void set_has_text();
  inline void clear_has_text();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* text_;
  ::google::protobuf::int32 value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_objects_2eproto();
  friend void protobuf_AssignDesc_objects_2eproto();
  friend void protobuf_ShutdownFile_objects_2eproto();
  
  void InitAsDefaultInstance();
  static infoObject* default_instance_;
};
// -------------------------------------------------------------------

class BooleanObject : public ::google::protobuf::Message {
 public:
  BooleanObject();
  virtual ~BooleanObject();
  
  BooleanObject(const BooleanObject& from);
  
  inline BooleanObject& operator=(const BooleanObject& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BooleanObject& default_instance();
  
  void Swap(BooleanObject* other);
  
  // implements Message ----------------------------------------------
  
  BooleanObject* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BooleanObject& from);
  void MergeFrom(const BooleanObject& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool istrue = 1;
  inline bool has_istrue() const;
  inline void clear_istrue();
  static const int kIstrueFieldNumber = 1;
  inline bool istrue() const;
  inline void set_istrue(bool value);
  
  // @@protoc_insertion_point(class_scope:eveobjects.BooleanObject)
 private:
  inline void set_has_istrue();
  inline void clear_has_istrue();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool istrue_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_objects_2eproto();
  friend void protobuf_AssignDesc_objects_2eproto();
  friend void protobuf_ShutdownFile_objects_2eproto();
  
  void InitAsDefaultInstance();
  static BooleanObject* default_instance_;
};
// -------------------------------------------------------------------

class functionCall : public ::google::protobuf::Message {
 public:
  functionCall();
  virtual ~functionCall();
  
  functionCall(const functionCall& from);
  
  inline functionCall& operator=(const functionCall& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const functionCall& default_instance();
  
  void Swap(functionCall* other);
  
  // implements Message ----------------------------------------------
  
  functionCall* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const functionCall& from);
  void MergeFrom(const functionCall& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional string strparameter = 2;
  inline bool has_strparameter() const;
  inline void clear_strparameter();
  static const int kStrparameterFieldNumber = 2;
  inline const ::std::string& strparameter() const;
  inline void set_strparameter(const ::std::string& value);
  inline void set_strparameter(const char* value);
  inline void set_strparameter(const char* value, size_t size);
  inline ::std::string* mutable_strparameter();
  inline ::std::string* release_strparameter();
  
  // @@protoc_insertion_point(class_scope:eveobjects.functionCall)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_strparameter();
  inline void clear_has_strparameter();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::std::string* strparameter_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_objects_2eproto();
  friend void protobuf_AssignDesc_objects_2eproto();
  friend void protobuf_ShutdownFile_objects_2eproto();
  
  void InitAsDefaultInstance();
  static functionCall* default_instance_;
};
// -------------------------------------------------------------------

class overview : public ::google::protobuf::Message {
 public:
  overview();
  virtual ~overview();
  
  overview(const overview& from);
  
  inline overview& operator=(const overview& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const overview& default_instance();
  
  void Swap(overview* other);
  
  // implements Message ----------------------------------------------
  
  overview* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const overview& from);
  void MergeFrom(const overview& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .eveobjects.label overviewEntry = 1;
  inline int overviewentry_size() const;
  inline void clear_overviewentry();
  static const int kOverviewEntryFieldNumber = 1;
  inline const ::eveobjects::label& overviewentry(int index) const;
  inline ::eveobjects::label* mutable_overviewentry(int index);
  inline ::eveobjects::label* add_overviewentry();
  inline const ::google::protobuf::RepeatedPtrField< ::eveobjects::label >&
      overviewentry() const;
  inline ::google::protobuf::RepeatedPtrField< ::eveobjects::label >*
      mutable_overviewentry();
  
  // @@protoc_insertion_point(class_scope:eveobjects.overview)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::eveobjects::label > overviewentry_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_objects_2eproto();
  friend void protobuf_AssignDesc_objects_2eproto();
  friend void protobuf_ShutdownFile_objects_2eproto();
  
  void InitAsDefaultInstance();
  static overview* default_instance_;
};
// -------------------------------------------------------------------

class itemgroup : public ::google::protobuf::Message {
 public:
  itemgroup();
  virtual ~itemgroup();
  
  itemgroup(const itemgroup& from);
  
  inline itemgroup& operator=(const itemgroup& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const itemgroup& default_instance();
  
  void Swap(itemgroup* other);
  
  // implements Message ----------------------------------------------
  
  itemgroup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const itemgroup& from);
  void MergeFrom(const itemgroup& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .eveobjects.item items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::eveobjects::item& items(int index) const;
  inline ::eveobjects::item* mutable_items(int index);
  inline ::eveobjects::item* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::eveobjects::item >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::eveobjects::item >*
      mutable_items();
  
  // @@protoc_insertion_point(class_scope:eveobjects.itemgroup)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::eveobjects::item > items_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_objects_2eproto();
  friend void protobuf_AssignDesc_objects_2eproto();
  friend void protobuf_ShutdownFile_objects_2eproto();
  
  void InitAsDefaultInstance();
  static itemgroup* default_instance_;
};
// -------------------------------------------------------------------

class item : public ::google::protobuf::Message {
 public:
  item();
  virtual ~item();
  
  item(const item& from);
  
  inline item& operator=(const item& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const item& default_instance();
  
  void Swap(item* other);
  
  // implements Message ----------------------------------------------
  
  item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const item& from);
  void MergeFrom(const item& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required int32 quantity = 2;
  inline bool has_quantity() const;
  inline void clear_quantity();
  static const int kQuantityFieldNumber = 2;
  inline ::google::protobuf::int32 quantity() const;
  inline void set_quantity(::google::protobuf::int32 value);
  
  // required string meta = 3;
  inline bool has_meta() const;
  inline void clear_meta();
  static const int kMetaFieldNumber = 3;
  inline const ::std::string& meta() const;
  inline void set_meta(const ::std::string& value);
  inline void set_meta(const char* value);
  inline void set_meta(const char* value, size_t size);
  inline ::std::string* mutable_meta();
  inline ::std::string* release_meta();
  
  // required string volume = 4;
  inline bool has_volume() const;
  inline void clear_volume();
  static const int kVolumeFieldNumber = 4;
  inline const ::std::string& volume() const;
  inline void set_volume(const ::std::string& value);
  inline void set_volume(const char* value);
  inline void set_volume(const char* value, size_t size);
  inline ::std::string* mutable_volume();
  inline ::std::string* release_volume();
  
  // required .eveobjects.label data = 5;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 5;
  inline const ::eveobjects::label& data() const;
  inline ::eveobjects::label* mutable_data();
  inline ::eveobjects::label* release_data();
  
  // @@protoc_insertion_point(class_scope:eveobjects.item)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_quantity();
  inline void clear_has_quantity();
  inline void set_has_meta();
  inline void clear_has_meta();
  inline void set_has_volume();
  inline void clear_has_volume();
  inline void set_has_data();
  inline void clear_has_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::std::string* meta_;
  ::std::string* volume_;
  ::eveobjects::label* data_;
  ::google::protobuf::int32 quantity_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_objects_2eproto();
  friend void protobuf_AssignDesc_objects_2eproto();
  friend void protobuf_ShutdownFile_objects_2eproto();
  
  void InitAsDefaultInstance();
  static item* default_instance_;
};
// -------------------------------------------------------------------

class label : public ::google::protobuf::Message {
 public:
  label();
  virtual ~label();
  
  label(const label& from);
  
  inline label& operator=(const label& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const label& default_instance();
  
  void Swap(label* other);
  
  // implements Message ----------------------------------------------
  
  label* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const label& from);
  void MergeFrom(const label& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string text = 1;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 1;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  
  // required int32 topLeftX = 2;
  inline bool has_topleftx() const;
  inline void clear_topleftx();
  static const int kTopLeftXFieldNumber = 2;
  inline ::google::protobuf::int32 topleftx() const;
  inline void set_topleftx(::google::protobuf::int32 value);
  
  // required int32 topLeftY = 3;
  inline bool has_toplefty() const;
  inline void clear_toplefty();
  static const int kTopLeftYFieldNumber = 3;
  inline ::google::protobuf::int32 toplefty() const;
  inline void set_toplefty(::google::protobuf::int32 value);
  
  // required int32 width = 4;
  inline bool has_width() const;
  inline void clear_width();
  static const int kWidthFieldNumber = 4;
  inline ::google::protobuf::int32 width() const;
  inline void set_width(::google::protobuf::int32 value);
  
  // required int32 height = 5;
  inline bool has_height() const;
  inline void clear_height();
  static const int kHeightFieldNumber = 5;
  inline ::google::protobuf::int32 height() const;
  inline void set_height(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:eveobjects.label)
 private:
  inline void set_has_text();
  inline void clear_has_text();
  inline void set_has_topleftx();
  inline void clear_has_topleftx();
  inline void set_has_toplefty();
  inline void clear_has_toplefty();
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* text_;
  ::google::protobuf::int32 topleftx_;
  ::google::protobuf::int32 toplefty_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_objects_2eproto();
  friend void protobuf_AssignDesc_objects_2eproto();
  friend void protobuf_ShutdownFile_objects_2eproto();
  
  void InitAsDefaultInstance();
  static label* default_instance_;
};
// -------------------------------------------------------------------

class TargetList : public ::google::protobuf::Message {
 public:
  TargetList();
  virtual ~TargetList();
  
  TargetList(const TargetList& from);
  
  inline TargetList& operator=(const TargetList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const TargetList& default_instance();
  
  void Swap(TargetList* other);
  
  // implements Message ----------------------------------------------
  
  TargetList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TargetList& from);
  void MergeFrom(const TargetList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .eveobjects.targetentry thistarget = 1;
  inline int thistarget_size() const;
  inline void clear_thistarget();
  static const int kThistargetFieldNumber = 1;
  inline const ::eveobjects::targetentry& thistarget(int index) const;
  inline ::eveobjects::targetentry* mutable_thistarget(int index);
  inline ::eveobjects::targetentry* add_thistarget();
  inline const ::google::protobuf::RepeatedPtrField< ::eveobjects::targetentry >&
      thistarget() const;
  inline ::google::protobuf::RepeatedPtrField< ::eveobjects::targetentry >*
      mutable_thistarget();
  
  // @@protoc_insertion_point(class_scope:eveobjects.TargetList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::eveobjects::targetentry > thistarget_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_objects_2eproto();
  friend void protobuf_AssignDesc_objects_2eproto();
  friend void protobuf_ShutdownFile_objects_2eproto();
  
  void InitAsDefaultInstance();
  static TargetList* default_instance_;
};
// -------------------------------------------------------------------

class targetentry : public ::google::protobuf::Message {
 public:
  targetentry();
  virtual ~targetentry();
  
  targetentry(const targetentry& from);
  
  inline targetentry& operator=(const targetentry& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const targetentry& default_instance();
  
  void Swap(targetentry* other);
  
  // implements Message ----------------------------------------------
  
  targetentry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const targetentry& from);
  void MergeFrom(const targetentry& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .eveobjects.label text = 1;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 1;
  inline const ::eveobjects::label& text() const;
  inline ::eveobjects::label* mutable_text();
  inline ::eveobjects::label* release_text();
  
  // optional .eveobjects.jammers jams = 2;
  inline bool has_jams() const;
  inline void clear_jams();
  static const int kJamsFieldNumber = 2;
  inline const ::eveobjects::jammers& jams() const;
  inline ::eveobjects::jammers* mutable_jams();
  inline ::eveobjects::jammers* release_jams();
  
  // @@protoc_insertion_point(class_scope:eveobjects.targetentry)
 private:
  inline void set_has_text();
  inline void clear_has_text();
  inline void set_has_jams();
  inline void clear_has_jams();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::eveobjects::label* text_;
  ::eveobjects::jammers* jams_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_objects_2eproto();
  friend void protobuf_AssignDesc_objects_2eproto();
  friend void protobuf_ShutdownFile_objects_2eproto();
  
  void InitAsDefaultInstance();
  static targetentry* default_instance_;
};
// -------------------------------------------------------------------

class jammers : public ::google::protobuf::Message {
 public:
  jammers();
  virtual ~jammers();
  
  jammers(const jammers& from);
  
  inline jammers& operator=(const jammers& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const jammers& default_instance();
  
  void Swap(jammers* other);
  
  // implements Message ----------------------------------------------
  
  jammers* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const jammers& from);
  void MergeFrom(const jammers& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated string jammer = 1;
  inline int jammer_size() const;
  inline void clear_jammer();
  static const int kJammerFieldNumber = 1;
  inline const ::std::string& jammer(int index) const;
  inline ::std::string* mutable_jammer(int index);
  inline void set_jammer(int index, const ::std::string& value);
  inline void set_jammer(int index, const char* value);
  inline void set_jammer(int index, const char* value, size_t size);
  inline ::std::string* add_jammer();
  inline void add_jammer(const ::std::string& value);
  inline void add_jammer(const char* value);
  inline void add_jammer(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& jammer() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_jammer();
  
  // @@protoc_insertion_point(class_scope:eveobjects.jammers)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> jammer_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_objects_2eproto();
  friend void protobuf_AssignDesc_objects_2eproto();
  friend void protobuf_ShutdownFile_objects_2eproto();
  
  void InitAsDefaultInstance();
  static jammers* default_instance_;
};
// -------------------------------------------------------------------

class Interface : public ::google::protobuf::Message {
 public:
  Interface();
  virtual ~Interface();
  
  Interface(const Interface& from);
  
  inline Interface& operator=(const Interface& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Interface& default_instance();
  
  void Swap(Interface* other);
  
  // implements Message ----------------------------------------------
  
  Interface* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Interface& from);
  void MergeFrom(const Interface& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required int32 topleftX = 2;
  inline bool has_topleftx() const;
  inline void clear_topleftx();
  static const int kTopleftXFieldNumber = 2;
  inline ::google::protobuf::int32 topleftx() const;
  inline void set_topleftx(::google::protobuf::int32 value);
  
  // required int32 topleftY = 3;
  inline bool has_toplefty() const;
  inline void clear_toplefty();
  static const int kTopleftYFieldNumber = 3;
  inline ::google::protobuf::int32 toplefty() const;
  inline void set_toplefty(::google::protobuf::int32 value);
  
  // required int32 width = 4;
  inline bool has_width() const;
  inline void clear_width();
  static const int kWidthFieldNumber = 4;
  inline ::google::protobuf::int32 width() const;
  inline void set_width(::google::protobuf::int32 value);
  
  // required int32 height = 5;
  inline bool has_height() const;
  inline void clear_height();
  static const int kHeightFieldNumber = 5;
  inline ::google::protobuf::int32 height() const;
  inline void set_height(::google::protobuf::int32 value);
  
  // optional bool hasCloseButton = 6;
  inline bool has_hasclosebutton() const;
  inline void clear_hasclosebutton();
  static const int kHasCloseButtonFieldNumber = 6;
  inline bool hasclosebutton() const;
  inline void set_hasclosebutton(bool value);
  
  // optional int32 closeTopLeftX = 7;
  inline bool has_closetopleftx() const;
  inline void clear_closetopleftx();
  static const int kCloseTopLeftXFieldNumber = 7;
  inline ::google::protobuf::int32 closetopleftx() const;
  inline void set_closetopleftx(::google::protobuf::int32 value);
  
  // optional int32 closeTopLeftY = 8;
  inline bool has_closetoplefty() const;
  inline void clear_closetoplefty();
  static const int kCloseTopLeftYFieldNumber = 8;
  inline ::google::protobuf::int32 closetoplefty() const;
  inline void set_closetoplefty(::google::protobuf::int32 value);
  
  // optional bool hasContinueButton = 9;
  inline bool has_hascontinuebutton() const;
  inline void clear_hascontinuebutton();
  static const int kHasContinueButtonFieldNumber = 9;
  inline bool hascontinuebutton() const;
  inline void set_hascontinuebutton(bool value);
  
  // optional int32 continueTopLeftX = 10;
  inline bool has_continuetopleftx() const;
  inline void clear_continuetopleftx();
  static const int kContinueTopLeftXFieldNumber = 10;
  inline ::google::protobuf::int32 continuetopleftx() const;
  inline void set_continuetopleftx(::google::protobuf::int32 value);
  
  // optional int32 continueTopLeftY = 11;
  inline bool has_continuetoplefty() const;
  inline void clear_continuetoplefty();
  static const int kContinueTopLeftYFieldNumber = 11;
  inline ::google::protobuf::int32 continuetoplefty() const;
  inline void set_continuetoplefty(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:eveobjects.Interface)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_topleftx();
  inline void clear_has_topleftx();
  inline void set_has_toplefty();
  inline void clear_has_toplefty();
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_hasclosebutton();
  inline void clear_has_hasclosebutton();
  inline void set_has_closetopleftx();
  inline void clear_has_closetopleftx();
  inline void set_has_closetoplefty();
  inline void clear_has_closetoplefty();
  inline void set_has_hascontinuebutton();
  inline void clear_has_hascontinuebutton();
  inline void set_has_continuetopleftx();
  inline void clear_has_continuetopleftx();
  inline void set_has_continuetoplefty();
  inline void clear_has_continuetoplefty();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::google::protobuf::int32 topleftx_;
  ::google::protobuf::int32 toplefty_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  ::google::protobuf::int32 closetopleftx_;
  bool hasclosebutton_;
  bool hascontinuebutton_;
  ::google::protobuf::int32 closetoplefty_;
  ::google::protobuf::int32 continuetopleftx_;
  ::google::protobuf::int32 continuetoplefty_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];
  
  friend void  protobuf_AddDesc_objects_2eproto();
  friend void protobuf_AssignDesc_objects_2eproto();
  friend void protobuf_ShutdownFile_objects_2eproto();
  
  void InitAsDefaultInstance();
  static Interface* default_instance_;
};
// ===================================================================


// ===================================================================

// infoObject

// optional string text = 1;
inline bool infoObject::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void infoObject::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void infoObject::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void infoObject::clear_text() {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& infoObject::text() const {
  return *text_;
}
inline void infoObject::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void infoObject::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void infoObject::set_text(const char* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* infoObject::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  return text_;
}
inline ::std::string* infoObject::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 value = 2;
inline bool infoObject::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void infoObject::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void infoObject::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void infoObject::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 infoObject::value() const {
  return value_;
}
inline void infoObject::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// BooleanObject

// required bool istrue = 1;
inline bool BooleanObject::has_istrue() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BooleanObject::set_has_istrue() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BooleanObject::clear_has_istrue() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BooleanObject::clear_istrue() {
  istrue_ = false;
  clear_has_istrue();
}
inline bool BooleanObject::istrue() const {
  return istrue_;
}
inline void BooleanObject::set_istrue(bool value) {
  set_has_istrue();
  istrue_ = value;
}

// -------------------------------------------------------------------

// functionCall

// required string name = 1;
inline bool functionCall::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void functionCall::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void functionCall::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void functionCall::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& functionCall::name() const {
  return *name_;
}
inline void functionCall::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void functionCall::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void functionCall::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* functionCall::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* functionCall::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string strparameter = 2;
inline bool functionCall::has_strparameter() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void functionCall::set_has_strparameter() {
  _has_bits_[0] |= 0x00000002u;
}
inline void functionCall::clear_has_strparameter() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void functionCall::clear_strparameter() {
  if (strparameter_ != &::google::protobuf::internal::kEmptyString) {
    strparameter_->clear();
  }
  clear_has_strparameter();
}
inline const ::std::string& functionCall::strparameter() const {
  return *strparameter_;
}
inline void functionCall::set_strparameter(const ::std::string& value) {
  set_has_strparameter();
  if (strparameter_ == &::google::protobuf::internal::kEmptyString) {
    strparameter_ = new ::std::string;
  }
  strparameter_->assign(value);
}
inline void functionCall::set_strparameter(const char* value) {
  set_has_strparameter();
  if (strparameter_ == &::google::protobuf::internal::kEmptyString) {
    strparameter_ = new ::std::string;
  }
  strparameter_->assign(value);
}
inline void functionCall::set_strparameter(const char* value, size_t size) {
  set_has_strparameter();
  if (strparameter_ == &::google::protobuf::internal::kEmptyString) {
    strparameter_ = new ::std::string;
  }
  strparameter_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* functionCall::mutable_strparameter() {
  set_has_strparameter();
  if (strparameter_ == &::google::protobuf::internal::kEmptyString) {
    strparameter_ = new ::std::string;
  }
  return strparameter_;
}
inline ::std::string* functionCall::release_strparameter() {
  clear_has_strparameter();
  if (strparameter_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strparameter_;
    strparameter_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// overview

// repeated .eveobjects.label overviewEntry = 1;
inline int overview::overviewentry_size() const {
  return overviewentry_.size();
}
inline void overview::clear_overviewentry() {
  overviewentry_.Clear();
}
inline const ::eveobjects::label& overview::overviewentry(int index) const {
  return overviewentry_.Get(index);
}
inline ::eveobjects::label* overview::mutable_overviewentry(int index) {
  return overviewentry_.Mutable(index);
}
inline ::eveobjects::label* overview::add_overviewentry() {
  return overviewentry_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::eveobjects::label >&
overview::overviewentry() const {
  return overviewentry_;
}
inline ::google::protobuf::RepeatedPtrField< ::eveobjects::label >*
overview::mutable_overviewentry() {
  return &overviewentry_;
}

// -------------------------------------------------------------------

// itemgroup

// repeated .eveobjects.item items = 1;
inline int itemgroup::items_size() const {
  return items_.size();
}
inline void itemgroup::clear_items() {
  items_.Clear();
}
inline const ::eveobjects::item& itemgroup::items(int index) const {
  return items_.Get(index);
}
inline ::eveobjects::item* itemgroup::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::eveobjects::item* itemgroup::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::eveobjects::item >&
itemgroup::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::eveobjects::item >*
itemgroup::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// item

// required string name = 1;
inline bool item::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void item::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void item::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void item::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& item::name() const {
  return *name_;
}
inline void item::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void item::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void item::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* item::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* item::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required int32 quantity = 2;
inline bool item::has_quantity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void item::set_has_quantity() {
  _has_bits_[0] |= 0x00000002u;
}
inline void item::clear_has_quantity() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void item::clear_quantity() {
  quantity_ = 0;
  clear_has_quantity();
}
inline ::google::protobuf::int32 item::quantity() const {
  return quantity_;
}
inline void item::set_quantity(::google::protobuf::int32 value) {
  set_has_quantity();
  quantity_ = value;
}

// required string meta = 3;
inline bool item::has_meta() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void item::set_has_meta() {
  _has_bits_[0] |= 0x00000004u;
}
inline void item::clear_has_meta() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void item::clear_meta() {
  if (meta_ != &::google::protobuf::internal::kEmptyString) {
    meta_->clear();
  }
  clear_has_meta();
}
inline const ::std::string& item::meta() const {
  return *meta_;
}
inline void item::set_meta(const ::std::string& value) {
  set_has_meta();
  if (meta_ == &::google::protobuf::internal::kEmptyString) {
    meta_ = new ::std::string;
  }
  meta_->assign(value);
}
inline void item::set_meta(const char* value) {
  set_has_meta();
  if (meta_ == &::google::protobuf::internal::kEmptyString) {
    meta_ = new ::std::string;
  }
  meta_->assign(value);
}
inline void item::set_meta(const char* value, size_t size) {
  set_has_meta();
  if (meta_ == &::google::protobuf::internal::kEmptyString) {
    meta_ = new ::std::string;
  }
  meta_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* item::mutable_meta() {
  set_has_meta();
  if (meta_ == &::google::protobuf::internal::kEmptyString) {
    meta_ = new ::std::string;
  }
  return meta_;
}
inline ::std::string* item::release_meta() {
  clear_has_meta();
  if (meta_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = meta_;
    meta_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string volume = 4;
inline bool item::has_volume() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void item::set_has_volume() {
  _has_bits_[0] |= 0x00000008u;
}
inline void item::clear_has_volume() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void item::clear_volume() {
  if (volume_ != &::google::protobuf::internal::kEmptyString) {
    volume_->clear();
  }
  clear_has_volume();
}
inline const ::std::string& item::volume() const {
  return *volume_;
}
inline void item::set_volume(const ::std::string& value) {
  set_has_volume();
  if (volume_ == &::google::protobuf::internal::kEmptyString) {
    volume_ = new ::std::string;
  }
  volume_->assign(value);
}
inline void item::set_volume(const char* value) {
  set_has_volume();
  if (volume_ == &::google::protobuf::internal::kEmptyString) {
    volume_ = new ::std::string;
  }
  volume_->assign(value);
}
inline void item::set_volume(const char* value, size_t size) {
  set_has_volume();
  if (volume_ == &::google::protobuf::internal::kEmptyString) {
    volume_ = new ::std::string;
  }
  volume_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* item::mutable_volume() {
  set_has_volume();
  if (volume_ == &::google::protobuf::internal::kEmptyString) {
    volume_ = new ::std::string;
  }
  return volume_;
}
inline ::std::string* item::release_volume() {
  clear_has_volume();
  if (volume_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = volume_;
    volume_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required .eveobjects.label data = 5;
inline bool item::has_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void item::set_has_data() {
  _has_bits_[0] |= 0x00000010u;
}
inline void item::clear_has_data() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void item::clear_data() {
  if (data_ != NULL) data_->::eveobjects::label::Clear();
  clear_has_data();
}
inline const ::eveobjects::label& item::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::eveobjects::label* item::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::eveobjects::label;
  return data_;
}
inline ::eveobjects::label* item::release_data() {
  clear_has_data();
  ::eveobjects::label* temp = data_;
  data_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// label

// required string text = 1;
inline bool label::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void label::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void label::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void label::clear_text() {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& label::text() const {
  return *text_;
}
inline void label::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void label::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void label::set_text(const char* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* label::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  return text_;
}
inline ::std::string* label::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required int32 topLeftX = 2;
inline bool label::has_topleftx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void label::set_has_topleftx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void label::clear_has_topleftx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void label::clear_topleftx() {
  topleftx_ = 0;
  clear_has_topleftx();
}
inline ::google::protobuf::int32 label::topleftx() const {
  return topleftx_;
}
inline void label::set_topleftx(::google::protobuf::int32 value) {
  set_has_topleftx();
  topleftx_ = value;
}

// required int32 topLeftY = 3;
inline bool label::has_toplefty() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void label::set_has_toplefty() {
  _has_bits_[0] |= 0x00000004u;
}
inline void label::clear_has_toplefty() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void label::clear_toplefty() {
  toplefty_ = 0;
  clear_has_toplefty();
}
inline ::google::protobuf::int32 label::toplefty() const {
  return toplefty_;
}
inline void label::set_toplefty(::google::protobuf::int32 value) {
  set_has_toplefty();
  toplefty_ = value;
}

// required int32 width = 4;
inline bool label::has_width() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void label::set_has_width() {
  _has_bits_[0] |= 0x00000008u;
}
inline void label::clear_has_width() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void label::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 label::width() const {
  return width_;
}
inline void label::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
}

// required int32 height = 5;
inline bool label::has_height() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void label::set_has_height() {
  _has_bits_[0] |= 0x00000010u;
}
inline void label::clear_has_height() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void label::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 label::height() const {
  return height_;
}
inline void label::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
}

// -------------------------------------------------------------------

// TargetList

// repeated .eveobjects.targetentry thistarget = 1;
inline int TargetList::thistarget_size() const {
  return thistarget_.size();
}
inline void TargetList::clear_thistarget() {
  thistarget_.Clear();
}
inline const ::eveobjects::targetentry& TargetList::thistarget(int index) const {
  return thistarget_.Get(index);
}
inline ::eveobjects::targetentry* TargetList::mutable_thistarget(int index) {
  return thistarget_.Mutable(index);
}
inline ::eveobjects::targetentry* TargetList::add_thistarget() {
  return thistarget_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::eveobjects::targetentry >&
TargetList::thistarget() const {
  return thistarget_;
}
inline ::google::protobuf::RepeatedPtrField< ::eveobjects::targetentry >*
TargetList::mutable_thistarget() {
  return &thistarget_;
}

// -------------------------------------------------------------------

// targetentry

// optional .eveobjects.label text = 1;
inline bool targetentry::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void targetentry::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void targetentry::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void targetentry::clear_text() {
  if (text_ != NULL) text_->::eveobjects::label::Clear();
  clear_has_text();
}
inline const ::eveobjects::label& targetentry::text() const {
  return text_ != NULL ? *text_ : *default_instance_->text_;
}
inline ::eveobjects::label* targetentry::mutable_text() {
  set_has_text();
  if (text_ == NULL) text_ = new ::eveobjects::label;
  return text_;
}
inline ::eveobjects::label* targetentry::release_text() {
  clear_has_text();
  ::eveobjects::label* temp = text_;
  text_ = NULL;
  return temp;
}

// optional .eveobjects.jammers jams = 2;
inline bool targetentry::has_jams() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void targetentry::set_has_jams() {
  _has_bits_[0] |= 0x00000002u;
}
inline void targetentry::clear_has_jams() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void targetentry::clear_jams() {
  if (jams_ != NULL) jams_->::eveobjects::jammers::Clear();
  clear_has_jams();
}
inline const ::eveobjects::jammers& targetentry::jams() const {
  return jams_ != NULL ? *jams_ : *default_instance_->jams_;
}
inline ::eveobjects::jammers* targetentry::mutable_jams() {
  set_has_jams();
  if (jams_ == NULL) jams_ = new ::eveobjects::jammers;
  return jams_;
}
inline ::eveobjects::jammers* targetentry::release_jams() {
  clear_has_jams();
  ::eveobjects::jammers* temp = jams_;
  jams_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// jammers

// repeated string jammer = 1;
inline int jammers::jammer_size() const {
  return jammer_.size();
}
inline void jammers::clear_jammer() {
  jammer_.Clear();
}
inline const ::std::string& jammers::jammer(int index) const {
  return jammer_.Get(index);
}
inline ::std::string* jammers::mutable_jammer(int index) {
  return jammer_.Mutable(index);
}
inline void jammers::set_jammer(int index, const ::std::string& value) {
  jammer_.Mutable(index)->assign(value);
}
inline void jammers::set_jammer(int index, const char* value) {
  jammer_.Mutable(index)->assign(value);
}
inline void jammers::set_jammer(int index, const char* value, size_t size) {
  jammer_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* jammers::add_jammer() {
  return jammer_.Add();
}
inline void jammers::add_jammer(const ::std::string& value) {
  jammer_.Add()->assign(value);
}
inline void jammers::add_jammer(const char* value) {
  jammer_.Add()->assign(value);
}
inline void jammers::add_jammer(const char* value, size_t size) {
  jammer_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
jammers::jammer() const {
  return jammer_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
jammers::mutable_jammer() {
  return &jammer_;
}

// -------------------------------------------------------------------

// Interface

// required string name = 1;
inline bool Interface::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Interface::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Interface::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Interface::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Interface::name() const {
  return *name_;
}
inline void Interface::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Interface::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Interface::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Interface::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* Interface::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required int32 topleftX = 2;
inline bool Interface::has_topleftx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Interface::set_has_topleftx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Interface::clear_has_topleftx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Interface::clear_topleftx() {
  topleftx_ = 0;
  clear_has_topleftx();
}
inline ::google::protobuf::int32 Interface::topleftx() const {
  return topleftx_;
}
inline void Interface::set_topleftx(::google::protobuf::int32 value) {
  set_has_topleftx();
  topleftx_ = value;
}

// required int32 topleftY = 3;
inline bool Interface::has_toplefty() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Interface::set_has_toplefty() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Interface::clear_has_toplefty() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Interface::clear_toplefty() {
  toplefty_ = 0;
  clear_has_toplefty();
}
inline ::google::protobuf::int32 Interface::toplefty() const {
  return toplefty_;
}
inline void Interface::set_toplefty(::google::protobuf::int32 value) {
  set_has_toplefty();
  toplefty_ = value;
}

// required int32 width = 4;
inline bool Interface::has_width() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Interface::set_has_width() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Interface::clear_has_width() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Interface::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 Interface::width() const {
  return width_;
}
inline void Interface::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
}

// required int32 height = 5;
inline bool Interface::has_height() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Interface::set_has_height() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Interface::clear_has_height() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Interface::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 Interface::height() const {
  return height_;
}
inline void Interface::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
}

// optional bool hasCloseButton = 6;
inline bool Interface::has_hasclosebutton() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Interface::set_has_hasclosebutton() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Interface::clear_has_hasclosebutton() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Interface::clear_hasclosebutton() {
  hasclosebutton_ = false;
  clear_has_hasclosebutton();
}
inline bool Interface::hasclosebutton() const {
  return hasclosebutton_;
}
inline void Interface::set_hasclosebutton(bool value) {
  set_has_hasclosebutton();
  hasclosebutton_ = value;
}

// optional int32 closeTopLeftX = 7;
inline bool Interface::has_closetopleftx() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Interface::set_has_closetopleftx() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Interface::clear_has_closetopleftx() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Interface::clear_closetopleftx() {
  closetopleftx_ = 0;
  clear_has_closetopleftx();
}
inline ::google::protobuf::int32 Interface::closetopleftx() const {
  return closetopleftx_;
}
inline void Interface::set_closetopleftx(::google::protobuf::int32 value) {
  set_has_closetopleftx();
  closetopleftx_ = value;
}

// optional int32 closeTopLeftY = 8;
inline bool Interface::has_closetoplefty() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Interface::set_has_closetoplefty() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Interface::clear_has_closetoplefty() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Interface::clear_closetoplefty() {
  closetoplefty_ = 0;
  clear_has_closetoplefty();
}
inline ::google::protobuf::int32 Interface::closetoplefty() const {
  return closetoplefty_;
}
inline void Interface::set_closetoplefty(::google::protobuf::int32 value) {
  set_has_closetoplefty();
  closetoplefty_ = value;
}

// optional bool hasContinueButton = 9;
inline bool Interface::has_hascontinuebutton() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Interface::set_has_hascontinuebutton() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Interface::clear_has_hascontinuebutton() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Interface::clear_hascontinuebutton() {
  hascontinuebutton_ = false;
  clear_has_hascontinuebutton();
}
inline bool Interface::hascontinuebutton() const {
  return hascontinuebutton_;
}
inline void Interface::set_hascontinuebutton(bool value) {
  set_has_hascontinuebutton();
  hascontinuebutton_ = value;
}

// optional int32 continueTopLeftX = 10;
inline bool Interface::has_continuetopleftx() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Interface::set_has_continuetopleftx() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Interface::clear_has_continuetopleftx() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Interface::clear_continuetopleftx() {
  continuetopleftx_ = 0;
  clear_has_continuetopleftx();
}
inline ::google::protobuf::int32 Interface::continuetopleftx() const {
  return continuetopleftx_;
}
inline void Interface::set_continuetopleftx(::google::protobuf::int32 value) {
  set_has_continuetopleftx();
  continuetopleftx_ = value;
}

// optional int32 continueTopLeftY = 11;
inline bool Interface::has_continuetoplefty() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Interface::set_has_continuetoplefty() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Interface::clear_has_continuetoplefty() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Interface::clear_continuetoplefty() {
  continuetoplefty_ = 0;
  clear_has_continuetoplefty();
}
inline ::google::protobuf::int32 Interface::continuetoplefty() const {
  return continuetoplefty_;
}
inline void Interface::set_continuetoplefty(::google::protobuf::int32 value) {
  set_has_continuetoplefty();
  continuetoplefty_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace eveobjects

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_objects_2eproto__INCLUDED
